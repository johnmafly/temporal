version: "3.5"

services:
  cassandra:
    image: cassandra:3.11
    networks:
      services-network:
        aliases:
          - cassandra

  mysql:
    image: mysql:8.0.29-oracle
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      services-network:
        aliases:
          - mysql

  postgresql:
    image: postgres:13.5
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
    volumes:
      - ./postgresql-init:/docker-entrypoint-initdb.d
    networks:
      services-network:
        aliases:
          - postgresql

  elasticsearch:
    image: elasticsearch:7.10.1
    networks:
      services-network:
        aliases:
          - elasticsearch
    environment:
      - discovery.type=single-node

  build:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "CASSANDRA_SEEDS=cassandra"
      - "MYSQL_SEEDS=mysql"
      - "POSTGRES_SEEDS=postgresql"
      - FOSSA_API_KEY
    volumes:
      - ../..:/temporal

  db-integration-test:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "CASSANDRA_SEEDS=cassandra"
      - "MYSQL_SEEDS=mysql"
      - "POSTGRES_SEEDS=postgresql"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - cassandra
      - mysql
      - postgresql
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - db-integration-test

  integration-test-cassandra:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "CASSANDRA_SEEDS=cassandra"
      - "ES_SEEDS=elasticsearch"
      - "ES_VERSION=v7"
      - "PERSISTENCE_TYPE=nosql"
      - "PERSISTENCE_DRIVER=cassandra"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - cassandra
      - elasticsearch
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test

  integration-test-mysql:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "MYSQL_SEEDS=mysql"
      - "ES_SEEDS=elasticsearch"
      - "ES_VERSION=v7"
      - "PERSISTENCE_TYPE=sql"
      - "PERSISTENCE_DRIVER=mysql"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - mysql
      - elasticsearch
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test

  integration-test-mysql8:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "MYSQL_SEEDS=mysql"
      - "PERSISTENCE_TYPE=sql"
      - "PERSISTENCE_DRIVER=mysql8"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - mysql
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test

  integration-test-postgresql:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "POSTGRES_SEEDS=postgresql"
      - "ES_SEEDS=elasticsearch"
      - "ES_VERSION=v7"
      - "PERSISTENCE_TYPE=sql"
      - "PERSISTENCE_DRIVER=postgres"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - postgresql
      - elasticsearch
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test

  integration-test-postgresql12:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "POSTGRES_SEEDS=postgresql"
      - "PERSISTENCE_TYPE=sql"
      - "PERSISTENCE_DRIVER=postgres12"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - postgresql
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test

  integration-test-sqlite:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "PERSISTENCE_TYPE=sql"
      - "PERSISTENCE_DRIVER=sqlite"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test

  integration-test-xdc-cassandra:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "CASSANDRA_SEEDS=cassandra"
      - "ES_SEEDS=elasticsearch"
      - "ES_VERSION=v7"
      - "PERSISTENCE_TYPE=nosql"
      - "PERSISTENCE_DRIVER=cassandra"
      - "TEST_RUN_COUNT=10"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - cassandra
      - elasticsearch
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test-xdc

  integration-test-xdc-mysql:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "MYSQL_SEEDS=mysql"
      - "ES_SEEDS=elasticsearch"
      - "ES_VERSION=v7"
      - "PERSISTENCE_TYPE=sql"
      - "PERSISTENCE_DRIVER=mysql"
      - "TEST_RUN_COUNT=10"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - mysql
      - elasticsearch
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test-xdc

  integration-test-xdc-mysql8:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "MYSQL_SEEDS=mysql"
      - "PERSISTENCE_TYPE=sql"
      - "PERSISTENCE_DRIVER=mysql8"
      - "TEST_RUN_COUNT=10"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - mysql
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test-xdc

  integration-test-xdc-postgresql:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "POSTGRES_SEEDS=postgresql"
      - "ES_SEEDS=elasticsearch"
      - "ES_VERSION=v7"
      - "PERSISTENCE_TYPE=sql"
      - "PERSISTENCE_DRIVER=postgres"
      - "TEST_RUN_COUNT=10"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - postgresql
      - elasticsearch
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test-xdc

  integration-test-xdc-postgresql12:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - "POSTGRES_SEEDS=postgresql"
      - "PERSISTENCE_TYPE=sql"
      - "PERSISTENCE_DRIVER=postgres12"
      - "TEST_RUN_COUNT=10"
      - "TEMPORAL_VERSION_CHECK_DISABLED=1"
    depends_on:
      - postgresql
    volumes:
      - ../..:/temporal
    networks:
      services-network:
        aliases:
          - integration-test-xdc

  coverage-report:
    build:
      context: ../..
      dockerfile: ./develop/docker-compose/Dockerfile
    environment:
      - CI
      - COVERALLS_TOKEN
    volumes:
      - ../..:/temporal

networks:
  services-network:
    name: services-network
    driver: bridge
